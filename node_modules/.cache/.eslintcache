[{"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/index.js":"1","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/reportWebVitals.js":"2","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/App.jsx":"3","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/NavBar.jsx":"4","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Contact.jsx":"5","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/HomePage.jsx":"6","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Reservations.jsx":"7","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Footer.jsx":"8","/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Menu.jsx":"9","/Users/pablo.cigoy/Desktop/ONINA-web/src/index.js":"10","/Users/pablo.cigoy/Desktop/ONINA-web/src/reportWebVitals.js":"11","/Users/pablo.cigoy/Desktop/ONINA-web/src/App.jsx":"12","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/Footer.jsx":"13","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/HomePage.jsx":"14","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/NavBar.jsx":"15","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/AboutMe.jsx":"16","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/Gallery.jsx":"17","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/ContactMe.jsx":"18","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/BlogPost.jsx":"19","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/AllPost.jsx":"20","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/WordList.jsx":"21"},{"size":549,"mtime":1678644981173,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1678621404521,"results":"24","hashOfConfig":"23"},{"size":857,"mtime":1678742063527,"results":"25","hashOfConfig":"23"},{"size":1529,"mtime":1678741777899,"results":"26","hashOfConfig":"23"},{"size":661,"mtime":1678622888737,"results":"27","hashOfConfig":"23"},{"size":672,"mtime":1678720077450,"results":"28","hashOfConfig":"23"},{"size":1375,"mtime":1678718913777,"results":"29","hashOfConfig":"23"},{"size":463,"mtime":1678718959675,"results":"30","hashOfConfig":"23"},{"size":19323,"mtime":1678742100637,"results":"31","hashOfConfig":"23"},{"size":549,"mtime":1678644981173,"results":"32","hashOfConfig":"33"},{"size":362,"mtime":1678621404521,"results":"34","hashOfConfig":"33"},{"size":1735,"mtime":1679252031546,"results":"35","hashOfConfig":"33"},{"size":546,"mtime":1678996927808,"results":"36","hashOfConfig":"33"},{"size":675,"mtime":1678816554970,"results":"37","hashOfConfig":"33"},{"size":2196,"mtime":1679252055936,"results":"38","hashOfConfig":"33"},{"size":1295,"mtime":1679066303168,"results":"39","hashOfConfig":"33"},{"size":1549,"mtime":1678996907303,"results":"40","hashOfConfig":"33"},{"size":1865,"mtime":1678890637143,"results":"41","hashOfConfig":"33"},{"size":786,"mtime":1679001166691,"results":"42","hashOfConfig":"33"},{"size":19563,"mtime":1679250210733,"results":"43","hashOfConfig":"33"},{"size":10211,"mtime":1679251917429,"results":"44","hashOfConfig":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"lpw0pk",{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},"1tyk223",{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"75"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"75"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"75"},"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/index.js",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/reportWebVitals.js",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/App.jsx",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/NavBar.jsx",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Contact.jsx",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/HomePage.jsx",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Reservations.jsx",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Footer.jsx",[],[],"/Users/pablo.cigoy/Desktop/project-ATuBola/restaurant-atb/src/components/Menu.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/index.js",[],[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/reportWebVitals.js",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/App.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/Footer.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/HomePage.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/NavBar.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/AboutMe.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/Gallery.jsx",["112"],[],"import React from \"react\";\n\n\nexport const Gallery = () => {\n \n      const images = [\n    \"https://source.unsplash.com/random/800x600\",\n    \"https://source.unsplash.com/random/600x800\",\n    \"https://source.unsplash.com/random/600x800\",\n    \"https://source.unsplash.com/random/600x800\",\n    \"https://source.unsplash.com/random/900x700\",\n    \"https://source.unsplash.com/random/900x700\",\n    \"https://source.unsplash.com/random/700x900\",\n    \"https://source.unsplash.com/random/800x800\",\n    \"https://source.unsplash.com/random/600x600\",\n  ];\n\n  return (\n    <div className=\" py-8 bg-violet-400\">\n      <div className=\"container mx-auto\">\n        <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n          {images.map((image, index) => (\n            <div key={index}>\n              <img src={image} alt={`Image ${index}`} className=\"w-full h-auto rounded-lg shadow-lg\" />\n            </div>\n          ))}\n        </div>\n      </div>\n      <style jsx>{`\n        .bg-gray-100 {\n          background-color: #f7fafc;\n        }\n        .py-8 {\n          padding-top: 2rem;\n          padding-bottom: 2rem;\n        }\n        .grid-cols-2 {\n          grid-template-columns: repeat(2, minmax(0, 1fr));\n        }\n        .grid-cols-3 {\n          grid-template-columns: repeat(3, minmax(0, 1fr));\n        }\n        .rounded-lg {\n          border-radius: 0.5rem;\n        }\n        .shadow-lg {\n          box-shadow: 0px 10px 15px -3px rgba(0, 0, 0, 0.3), 0px 4px 6px -2px rgba(0, 0, 0, 0.05);\n          \n        }\n      `}</style>\n    </div>\n  );\n};\n \n\n\n\n  ","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/ContactMe.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/BlogPost.jsx",["113"],[],"import React from \"react\";\n//revisar y conectar a posts*\nexport const BlogPost = ({title, description, photoUrl}) => {\n    return (\n        <div className=\"bg-white shadow-lg rounded-lg overflow-hidden \">\n            {photoUrl && (\n                <img\n                    className=\"mx-auto shadow-lg rounded-lg overflow-hidden justify-center\"\n                    src={photoUrl}\n                    alt={`Photo for ${title}`}\n                />\n            )}\n            <div className=\"px-6 py-4 flex-col justify-center\">\n                <h3 className=\"text-lg font-medium text-gray-900 \">{title}</h3>\n                <div className=\"mt-2\">\n                    <p className=\"text-sm text-gray-500\">{description}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n","/Users/pablo.cigoy/Desktop/ONINA-web/src/components/AllPost.jsx",[],[],"/Users/pablo.cigoy/Desktop/ONINA-web/src/components/WordList.jsx",["114","115"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n  overlay: {\n    backgroundColor: 'rgba(0, 0, 0, 0.75)',\n  },\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    maxWidth: '400px',\n    width: '90%',\n    backgroundColor: '#f0f0f0',\n    borderRadius: '8px',\n    padding: '20px',\n  },\n};\n\nModal.setAppElement('#root');\n\nexport const WordList = () => {\n  const [words, setWords] = useState([]);\n  const [newWord, setNewWord] = useState({ word: '', description: '', spanish: '' });\n  const [editWord, setEditWord] = useState({ id: '', word: '', description: '', spanish: '' });\n  const [deleteWord, setDeleteWord] = useState('');\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [editModalIsOpen, setEditModalIsOpen] = useState(false);\n  const [deleteModalIsOpen, setDeleteModalIsOpen] = useState(false);\n\n  useEffect(() => {\n    axios.get('/api/words')\n      .then(response => {\n        setWords(response.data);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setNewWord({ ...newWord, [name]: value });\n  };\n\n  const handleEditInputChange = (event) => {\n    const { name, value } = event.target;\n    setEditWord({ ...editWord, [name]: value });\n  };\n\n  const handleAddWord = (event) => {\n    event.preventDefault();\n    axios.post('/api/words', newWord)\n      .then(response => {\n        setWords([...words, response.data]);\n        setNewWord({ word: '', description: '', spanish: '' });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleEditWord = (event) => {\n    event.preventDefault();\n    axios.put(`/api/words/${editWord.id}`, editWord)\n      .then(response => {\n        setWords(words.map(word => (word._id === response.data._id ? response.data : word)));\n        setEditWord({ id: '', word: '', description: '', spanish: '' });\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleDeleteWord = (event) => {\n    event.preventDefault();\n    axios.delete(`/api/words/${deleteWord}`)\n      .then(response => {\n        setWords(words.filter(word => word._id !== response.data._id));\n        setDeleteWord('');\n      })\n      .catch(error => {\n        console.log(error);\n      });\n  };\n\n  const handleModalOpen = () => {\n    setModalIsOpen(true);\n    };\n    \n    const handleModalClose = () => {\n    setModalIsOpen(false);\n    };\n    \n    const handleEditModalOpen = (id, word, description, spanish) => {\n    setEditWord({ id, word, description, spanish });\n    setEditModalIsOpen(true);\n    };\n    \n    const handleEditModalClose = () => {\n    setEditModalIsOpen(false);\n    };\n    \n    const handleDeleteModalOpen = (id) => {\n    setDeleteWord(id);\n    setDeleteModalIsOpen(true);\n    };\n    \n    const handleDeleteModalClose = () => {\n    setDeleteModalIsOpen(false);\n    };\n    \n    return (\n    <div className=\"mx-auto max-w-md\">\n    <h1 className=\"text-center text-4xl font-bold text-violet-600 my-4\">Word List</h1>\n    <form onSubmit={handleAddWord} className=\"my-4\">\n    <div className=\"mb-2\">\n    <label htmlFor=\"word\" className=\"block text-gray-700 font-bold mb-2\">Word:</label>\n    <input type=\"text\" id=\"word\" name=\"word\" value={newWord.word} onChange={handleInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n    </div>\n    <div className=\"mb-2\">\n    <label htmlFor=\"description\" className=\"block text-gray-700 font-bold mb-2\">Description:</label>\n    <textarea id=\"description\" name=\"description\" value={newWord.description} onChange={handleInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n    </div>\n    <div className=\"mb-2\">\n    <label htmlFor=\"spanish\" className=\"block text-gray-700 font-bold mb-2\">Spanish Translation:</label>\n    <input type=\"text\" id=\"spanish\" name=\"spanish\" value={newWord.spanish} onChange={handleInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n    </div>\n    <button type=\"submit\" className=\"bg-violet-600 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Add Word</button>\n    </form>\n    <table className=\"table-auto w-full\">\n    <thead>\n    <tr>\n    <th className=\"text-left px-4 py-2\">Word</th>\n    <th className=\"text-left px-4 py-2\">Description</th>\n    <th className=\"text-left px-4 py-2\">Spanish Translation</th>\n    <th className=\"text-left px-4 py-2\">Actions</th>\n    </tr>\n    </thead>\n    <tbody>\n    {words.sort((a, b) => new Date(b.date) - new Date(a.date)).map(word => (\n    <tr key={word._id}>\n    <td className=\"border px-4 py-2\">{word.word}</td>\n    <td className=\"border px-4 py-2\">{word.description}</td>\n    <td className=\"border px-4 py-2\">{word.spanish}</td>\n    <td className=\"border px-4 py-2\">\n    <button onClick={() => handleEditModalOpen(word._id, word.word, word.description, word.spanish)} className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline mr-2\">Edit</button>\n<button onClick={() => handleDeleteModalOpen(word._id)} className=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Delete</button>\n</td>\n</tr>\n))}\n</tbody>\n</table>\n<Modal\n     isOpen={modalIsOpen}\n     onRequestClose={handleModalClose}\n     style={customStyles}\n     contentLabel=\"Add Word Modal\"\n   >\n<h2 className=\"text-center text-2xl font-bold text-violet-600 my-4\">Add Word</h2>\n<form onSubmit={handleAddWord}>\n<div className=\"mb-2\">\n<label htmlFor=\"word\" className=\"block text-gray-700 font-bold mb-2\">Word:</label>\n<input type=\"text\" id=\"word\" name=\"word\" value={newWord.word} onChange={handleInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n</div>\n<div className=\"mb-2\">\n<label htmlFor=\"description\" className=\"block text-gray-700 font-bold mb-2\">Description:</label>\n<textarea id=\"description\" name=\"description\" value={newWord.description} onChange={handleInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n</div>\n<div className=\"mb-2\">\n<label htmlFor=\"spanish\" className=\"block text-gray-700 font-bold mb-2\">Spanish Translation:</label>\n<input type=\"text\" id=\"spanish\" name=\"spanish\" value={newWord.spanish} onChange={handleInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n</div>\n<button type=\"submit\" className=\"bg-violet-600 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Add Word</button>\n<button onClick={handleModalClose} className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-2\">Cancel</button>\n</form>\n</Modal>\n<Modal\n     isOpen={editModalIsOpen}\n     onRequestClose={handleEditModalClose}\n     style={customStyles}\n     contentLabel=\"Edit Word Modal\"\n   >\n<h2 className=\"text-center text-2xl font-bold text-violet-600 my-4\">Edit Word</h2>\n<form onSubmit={handleEditWord}>\n<input type=\"hidden\" id=\"id\" name=\"id\" value={editWord.id} />\n<div className=\"mb-2\">\n<label htmlFor=\"word\" className=\"block text-gray-700 font-bold mb-2\">Word:</label>\n<input type=\"text\" id=\"word\" name=\"word\" value={editWord.word} onChange={handleEditInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n</div>\n\n<div className=\"mb-2\">\n            <label htmlFor=\"description\" className=\"block text-gray-700 font-bold mb-2\">Description:</label>\n            <textarea id=\"description\" name=\"description\" value={editWord.description} onChange={handleEditInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n          </div>\n          <div className=\"mb-2\">\n            <label htmlFor=\"spanish\" className=\"block text-gray-700 font-bold mb-2\">Spanish Translation:</label>\n            <input type=\"text\" id=\"spanish\" name=\"spanish\" value={editWord.spanish} onChange={handleEditInputChange} className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" required />\n          </div>\n          <button type=\"submit\" className=\"bg-violet-600 hover:bg-violet-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Save Changes</button>\n          <button onClick={handleEditModalClose} className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-2\">Cancel</button>\n        </form>\n      </Modal>\n      <Modal\n        isOpen={deleteModalIsOpen}\n        onRequestClose={handleDeleteModalClose}\n        style={customStyles}\n        contentLabel=\"Delete Word Modal\"\n      >\n        <h2 className=\"text-center text-2xl font-bold text-red-600 my-4\">Delete Word</h2>\n        <p className=\"text-center text-gray-700 mb-4\">Are you sure you want to delete this word?</p>\n        <div className=\"text-center\">\n          {/* <button onClick={() => handleDeleteWord(deleteWordId)} className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\">Delete</button> */}\n          <button onClick={handleDeleteModalClose} className=\"bg-gray-500 hover:bg-gray-600 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline ml-2\">Cancel</button>\n        </div>\n      </Modal>\n    </div>\n  );\n}\n",{"ruleId":"116","severity":1,"message":"117","line":24,"column":15,"nodeType":"118","endLine":24,"endColumn":104},{"ruleId":"116","severity":1,"message":"117","line":7,"column":17,"nodeType":"118","endLine":11,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":79,"column":9,"nodeType":"121","messageId":"122","endLine":79,"endColumn":25},{"ruleId":"119","severity":1,"message":"123","line":91,"column":9,"nodeType":"121","messageId":"122","endLine":91,"endColumn":24},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'handleDeleteWord' is assigned a value but never used.","Identifier","unusedVar","'handleModalOpen' is assigned a value but never used."]